// 对象（object）
// 1、字面量形式{}
// let obj = {uname : '张三',age : 20,sex : '男'}
// console.log(obj);

// 2、构造函数的方式new Object
// let obj1 = new Object();
// obj1.color = 'pink';
// obj1.brand = '英菲克';
// obj1.type = 'M8';
// console.log(obj1);


// 定义一个学生信息
// 姓名，学号，班级，学院，该学生正在学习
// let student = {
//     sname: '李四',
//     sno: '1101',
//     cname: '2506A',
//     depart: '云计算',
//     study: function () {
//         console.log("正在学习");
//     }
// }



// 获取值
// 语法：
// 对象名['属性名']
// 对象名.属性名
// console.log(student['sname']);
// console.log(student.sname);
// console.log(student.sex);

// 添加元素：
// student.sex = '女';
// console.log(student);



// 修改元素：
// student.sex = '男';
// console.log(student);


// 删除元素：
// delete 对象名.属性名
// delete student.sno;
// console.log(student);


// 数组对象：
// let students = [
// {sname : 'CC校园8',year : 2012,class : 6,sno : 2229},
// {sname : 'CC校园1',year : 2012,class : 6,sno : 2222}
// ];



// let songs = [
//     {title : '命运',num : 3,time : '04:18'},
//     {title : '离别开出花',num : 2,time : '03:50'},
//     {title : '如果可以',num : 6,time : '03:56'},
// ];

// 筛选播放次数大于5的歌曲信息
// let arr = songs.filter(function(ele){
//     return ele.num > 5;
// });
// console.log(arr);




// 对象的遍历
// for...in
// let student = {
//     sname: '李四',
//     sno: '1101',
//     cname: '2506A',
//     depart: '云计算',
//     study: function () {
//         console.log("正在学习");
//     }
// }

// for(let i in student){   //i是属性名
//     // console.log(student[i]);  正常获取
//     console.log(student.i);  // 获取的都是undefined
// }





// 创建一个对象person,包含以下属性：
// name,age,sex,address,以及一个方法，该方法要求在调用时输出：正在吃早饭
// let person = {
//     name : '上华坤',
//     age : 18,
//     sex : '男',
//     address : '河北石家庄',
//     eat : function(){
//         console.log("正在吃早饭");
//     }
// }
// console.log(person);

// 修改对象属性
// 将person对象中的address改为：河北保定
// person.address = '河北保定';
// console.log(person);


// 添加新属性和方法
// 给person对象添加新的属性:电话phone,值为：0312-2888888
// person.phone = '0312-2888888';
// console.log(person);


// 删除person对象中的sex属性
// delete person.sex;
// console.log(person);


// 获取对象中的属性值添加到一个新数组中
// let n_arr = [];
// for(let i in person){
//     n_arr.push(person[i]);
// }
// console.log(n_arr);


// 要求：将大于70的对象添加至新数组中
// let arr = [
//     {num : 60},
//     {num : 75},
//     {num : 55},
//     {num : 80},
//     {num : 90}
// ];

// let n_arr = [];
// for(let i in arr){   //i是arr中的索引
//     if(arr[i].num > 70){
//         n_arr.push(arr[i]);
//     }
// }
// console.log(n_arr);

// let n_arr = arr.filter(function(item){
//     return item.num > 70;
// });
// console.log(n_arr);



// 对象中的this
// let person = {
//     name : '张三',
//     age : 18,
//     sex : '男',
//     introduce : function(){
//         console.log("我的名字为：" + this.name + "，我今年" + this.age + "岁");
//     }
// }

// person.introduce();



// 构造函数批量创建自定义对象
// new 自定义对象名称(建议首字母大写)
// 自定义对象使用函数进行封装

// 创建学生对象，包含有sname、age、sno
// function Student(n,a,s){
//     this.sname = n;
//     this.age = a;
//     this.sno = s;
// }

// let s1 = new Student('王浚哲',18,'1101');
// let s2 = new Student('银星号',19,'1102');
// console.log(s1,s2);



// with 语句
// 基本语法：
// with(对象名称){
//     //在with语句快中，访问该对象，不需要加对象名的前缀
//     name
// }

// 举例
// let person = {
//     name : '张三',
//     age : 18,
//     sex : '男',
//     introduce : function(){
//         console.log("我的名字为：" + this.name + "，我今年" + this.age + "岁");
//     }
// }

// with(person){
//     name = '李四';
//     age = 20;
//     sex = '女';
// }
// console.log(person);



let str = [1,2,3,1,2,3,1,1,2,'a','a','a',2];
// 找出数组中出现频率最高的元素
// 以对象的形式存储每个元素对应的次数，比如{1 : 次数}

// 创建一个空对象,存储每个元素对应的次数
let obj = {};

// 遍历数组中的每个元素
for(let i = 0;i <= str.length - 1;i++){
    // 获取当前遍历到的元素
    let ele = str[i];

    // 检查当前元素是否存在于对象中
    if(obj[ele]){
        // 如果存在，则进行属性值+1
        obj[ele]++;
    }else{
        // 不存在，要将该元素以及次数进行添加到对象中
        // 第一次出现，次数应该为1
        obj[ele] = 1;
    }
}
console.log(obj);

// 假设一个最大值
let maxCount = 0;
// 遍历对象
for(let i in obj){
    if(maxCount <= obj[i]){
        maxCount = obj[i];
        console.log(i);
    }
}

// 内置对象
// Math对象
// 属性：PI圆周率
// console.log(Math.PI);

// 方法：
// abs(x):返回一个值对于原点的距离，绝对值
// console.log(Math.abs(-5));


// pow(x,y):返回x的y次幂
// console.log(Math.pow(2,3));


// sqrt(x):返回x的平方根
// console.log(Math.sqrt(4));


// toFixed(x):返回数字保留x位的结果(四舍五入)
// let num = 3.145;
// console.log(num.toFixed(2));


// max(x,y):返回参数中的最大值
// console.log(Math.max(34,78,9,10));

// let arr = [23,45,1,2,90];
// console.log(Math.max(...arr));


// min(x,y):返回参数中的最小值
// console.log(Math.min(1,2,3,4));
// console.log(Math.min(...arr));



// 取整：
// round(x):返回x四舍五入取整后的结果
// console.log(Math.round(3.59));


// ceil(x):返回x向上取整后的结果
// console.log(Math.ceil(3.01));
// console.log(Math.ceil(-3.12));

// floor(x):返回x向下取整后的结果
// console.log(Math.floor(-2.5));
// console.log(Math.floor(2.5));


// random():生成0-1之间的随机数，包括0但不包括1   [0,1)
// console.log(Math.random());

// 获取0-10之间的随机数
// console.log(Math.random() * 10);

// 获取0-10之间的随机整数，包括0包括10 
// console.log(Math.ceil(Math.random() * 10));


// let sname = ['赵子彭','吴建伟','张少康','银星号'];
// 随机点名
// 索引值范围为0~length-1
// 获取随机索引值
// let index = Math.floor(Math.random() * sname.length);
// console.log(index);
// console.log(sname[index]);


// 实现任意区间内的随机值
// 5-10  [5,11)
// 0-1  ===> [5,11)  0,11
// function randNum(min,max){
//     return Math.floor(Math.random() * (max - min) + min);
// }

// console.log(randNum(5,11));


// [5,10]
// function randNum(min,max){
//     return Math.floor(Math.random() * (max - min + 1) + min);
// }

 截取：
// slice(startIndex,endIndex)
// let s = '目标化信念，应该化习惯';
// console.log(s.slice(-1,-3));


// substring(startIndex,endIndex)
// console.log(s.substring(5,3));

// 区别：
// slice:
// 参数位可以为负值，倒着进行截取
// 不可以进行颠倒参数位

// substring：参数位如果为负值，获取所有内容
// 可以进行颠倒参数位

// substr(startIndex,length):从开始位置截取length个字符
// console.log(s.substr(3,5));
.toLowerCase():把字符串文本转换为小写
// .toUpperCase():把字符串文本转换为大写
// let str = 'HelLo';
// console.log(str.toLowerCase());
// console.log(str.toUpperCase());


// trim():移除两侧空白
// trimLeft():移除左侧空白
// trimRight():移除右侧空白
// let str  = '     hello                      ';
// console.log(str.trim());
// console.log(str.trimLeft());
// console.log(str.trimRight());



// 查找
// charAt(index):返回指定索引处的字符
// let s = '目标化信念，应该化习惯';
// console.log(s.charAt(2));
// console.log(s[2]);


// charCodeAt(index):返回的是一个整数，表示的是Unicode编码
// a:97   A:65
// let str = 'abcdefg';
// console.log(str.charCodeAt(0));


// fromCharCode():获取指定的Unicode编码并返回相对应的字符
// console.log(String.fromCharCode(97,98,99,100));
// replace('被替换的字符/字符串','新的字符/字符串')
// let str = 'ABC123ABC';
// console.log(str.replace('ABC','abc'));

// replaceAll('被替换的字符/字符串','新的字符/字符串')
// console.log(str.replaceAll('ABC','abc'));
// console.log(str);


// 类型转换
// String / toString
// let s = 123;
// console.log(typeof String(s));
// console.log(typeof toString(s));


// big():返回大字体
// let str = '文字';
// document.write(str);
// document.write(str.big());

// small():返回小字体
// document.write(str.small());


// bold():加粗
// document.write(str.bold());

// italics():斜体
// document.write(str.italics());

// strike():删除线
// document.write(str.strike());


// fontsize():字体大小
// document.write(str.fontsize(50));


// fontcolor():字体颜色
// document.write(str.fontcolor('red'));


// link():把字符串转换成链接
// document.write(str.link('http://www.baidu.com'));


// sub():下标字体
// sup():上标字体
// document.write(str.sub());
// document.write(str.sup());


// split():讲字符串分割为数组
// let s = 'abc-123-456';
// console.log(s.split('-'));
// console.log(s.split());




// Date对象
// 创建日期对象
// let date = new Date();
// console.log(date);

// 两种方法
// (1)以字符串的形式设置日期参数
// let date = new Date('2025-11-11 08:56:30');
// console.log(date);

// (2)通过具体的数值表示日期
// 年：完整的4位年份数
// 月：0-11，0代表1月
// 日：1-31
// 小时：0-23
// 分钟:0-59
// 秒：0-59
// 毫秒：0-999
// let date = new Date(2026,4,30,12,59,30);
// console.log(date);



// 获取年:getFullYear()
// let date = new Date();
// let year = date.getFullYear();
// console.log(year);

// // 获取月：getMonth()
// let month = date.getMonth() + 1;
// console.log(month);

// // 获取日：getDate();
// let ri = date.getDate();
// console.log(ri);

// // 获取星期：getDay()  0-6:0代表星期日
// let week = date.getDay();
// console.log(week);
// console.log(new Date('2025-8-10').getDay());

// // 获取小时：getHours()
// console.log(date.getHours());

// // 获取分钟：getMinutes();
// console.log(date.getMinutes());

// // 获取秒：getSeconds()
// console.log(date.getSeconds());

// // 获取毫秒：getMilliseconds()
// console.log(date.getMilliseconds());


// // getTime():获取从1970年1月1日00：00：00到指定日期花去的毫秒数
// console.log(date.getTime());

// // 类型转换：+：转换为数值型
// console.log(+date);
// // let age = +prompt("请输入年龄");
// // console.log(typeof age);


// // setFullYear():设置年份
// // setMonth(0-11):设置月份
// // setDate():设置日
// // setHours():设置小时
// // setMinutes():设置分钟
// // setSeconds():设置秒
// // setMilliseconds():设置毫秒
// date.setDate(28);
// date.setHours(20);
// console.log(date);



// 计算两个日期之间的时间差
// let date1 = new Date();
// let date2 = new Date('2025-11-11 20:30:00');
// let diff = Math.floor(Math.abs(date1 - date2) / 1000);
// let day = Math.floor(diff / 60 / 60 / 24);
// let hours = Math.floor(diff / 60 / 60) % 24;
// let minutes = Math.floor(diff / 60) % 60;
// let seconds = Math.floor(diff % 60);
// console.log(`剩余：${day}天${hours}时${minutes}分${seconds}秒`);


// 定义一个函数，计算任意两个时间戳对应的时间差
// function time(date1, date2) {
//     let diff = Math.floor(Math.abs(date1 - date2) / 1000);
//     let day = Math.floor(diff / 60 / 60 / 24);
//     let hours = Math.floor(diff / 60 / 60) % 24;
//     let minutes = Math.floor(diff / 60) % 60;
//     let seconds = Math.floor(diff % 60);
//     return `剩余：${day}天${hours}时${minutes}分${seconds}秒`;
// }

// console.log(time(new Date('2025-11-11'),new Date('2025-12-12')));
