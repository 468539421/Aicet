
// 对象（object）
// 1、字面量形式{}
// let obj = {uname : '张三',age : 20,sex : '男'}
// console.log(obj);

// 2、构造函数的方式new Object
// let obj1 = new Object();
// obj1.color = 'pink';
// obj1.brand = '英菲克';
// obj1.type = 'M8';
// console.log(obj1);


// 定义一个学生信息
// 姓名，学号，班级，学院，该学生正在学习
// let student = {
//     sname: '李四',
//     sno: '1101',
//     cname: '2506A',
//     depart: '云计算',
//     study: function () {
//         console.log("正在学习");
//     }
// }



// 获取值
// 语法：
// 对象名['属性名']
// 对象名.属性名
// console.log(student['sname']);
// console.log(student.sname);
// console.log(student.sex);

// 添加元素：
// student.sex = '女';
// console.log(student);



// 修改元素：
// student.sex = '男';
// console.log(student);


// 删除元素：
// delete 对象名.属性名
// delete student.sno;
// console.log(student);


// 数组对象：
// let students = [
// {sname : 'CC校园8',year : 2012,class : 6,sno : 2229},
// {sname : 'CC校园1',year : 2012,class : 6,sno : 2222}
// ];



// let songs = [
//     {title : '命运',num : 3,time : '04:18'},
//     {title : '离别开出花',num : 2,time : '03:50'},
//     {title : '如果可以',num : 6,time : '03:56'},
// ];

// 筛选播放次数大于5的歌曲信息
// let arr = songs.filter(function(ele){
//     return ele.num > 5;
// });
// console.log(arr);




// 对象的遍历
// for...in
// let student = {
//     sname: '李四',
//     sno: '1101',
//     cname: '2506A',
//     depart: '云计算',
//     study: function () {
//         console.log("正在学习");
//     }
// }

// for(let i in student){   //i是属性名
//     // console.log(student[i]);  正常获取
//     console.log(student.i);  // 获取的都是undefined
// }





// 创建一个对象person,包含以下属性：
// name,age,sex,address,以及一个方法，该方法要求在调用时输出：正在吃早饭
// let person = {
//     name : '上华坤',
//     age : 18,
//     sex : '男',
//     address : '河北石家庄',
//     eat : function(){
//         console.log("正在吃早饭");
//     }
// }
// console.log(person);

// 修改对象属性
// 将person对象中的address改为：河北保定
// person.address = '河北保定';
// console.log(person);


// 添加新属性和方法
// 给person对象添加新的属性:电话phone,值为：0312-2888888
// person.phone = '0312-2888888';
// console.log(person);


// 删除person对象中的sex属性
// delete person.sex;
// console.log(person);


// 获取对象中的属性值添加到一个新数组中
// let n_arr = [];
// for(let i in person){
//     n_arr.push(person[i]);
// }
// console.log(n_arr);


// 要求：将大于70的对象添加至新数组中
// let arr = [
//     {num : 60},
//     {num : 75},
//     {num : 55},
//     {num : 80},
//     {num : 90}
// ];

// let n_arr = [];
// for(let i in arr){   //i是arr中的索引
//     if(arr[i].num > 70){
//         n_arr.push(arr[i]);
//     }
// }
// console.log(n_arr);

// let n_arr = arr.filter(function(item){
//     return item.num > 70;
// });
// console.log(n_arr);



// 对象中的this
// let person = {
//     name : '张三',
//     age : 18,
//     sex : '男',
//     introduce : function(){
//         console.log("我的名字为：" + this.name + "，我今年" + this.age + "岁");
//     }
// }

// person.introduce();



// 构造函数批量创建自定义对象
// new 自定义对象名称(建议首字母大写)
// 自定义对象使用函数进行封装

// 创建学生对象，包含有sname、age、sno
// function Student(n,a,s){
//     this.sname = n;
//     this.age = a;
//     this.sno = s;
// }

// let s1 = new Student('王浚哲',18,'1101');
// let s2 = new Student('银星号',19,'1102');
// console.log(s1,s2);



// with 语句
// 基本语法：
// with(对象名称){
//     //在with语句快中，访问该对象，不需要加对象名的前缀
//     name
// }

// 举例
// let person = {
//     name : '张三',
//     age : 18,
//     sex : '男',
//     introduce : function(){
//         console.log("我的名字为：" + this.name + "，我今年" + this.age + "岁");
//     }
// }

// with(person){
//     name = '李四';
//     age = 20;
//     sex = '女';
// }
// console.log(person);



let str = [1,2,3,1,2,3,1,1,2,'a','a','a',2];
// 找出数组中出现频率最高的元素
// 以对象的形式存储每个元素对应的次数，比如{1 : 次数}

// 创建一个空对象,存储每个元素对应的次数
let obj = {};

// 遍历数组中的每个元素
for(let i = 0;i <= str.length - 1;i++){
    // 获取当前遍历到的元素
    let ele = str[i];

    // 检查当前元素是否存在于对象中
    if(obj[ele]){
        // 如果存在，则进行属性值+1
        obj[ele]++;
    }else{
        // 不存在，要将该元素以及次数进行添加到对象中
        // 第一次出现，次数应该为1
        obj[ele] = 1;
    }
}
console.log(obj);

// 假设一个最大值
let maxCount = 0;
// 遍历对象
for(let i in obj){
    if(maxCount <= obj[i]){
        maxCount = obj[i];
        console.log(i);
    }
}

// 内置对象
// Math对象
// 属性：PI圆周率
// console.log(Math.PI);

// 方法：
// abs(x):返回一个值对于原点的距离，绝对值
// console.log(Math.abs(-5));


// pow(x,y):返回x的y次幂
// console.log(Math.pow(2,3));


// sqrt(x):返回x的平方根
// console.log(Math.sqrt(4));


// toFixed(x):返回数字保留x位的结果(四舍五入)
// let num = 3.145;
// console.log(num.toFixed(2));


// max(x,y):返回参数中的最大值
// console.log(Math.max(34,78,9,10));

// let arr = [23,45,1,2,90];
// console.log(Math.max(...arr));


// min(x,y):返回参数中的最小值
// console.log(Math.min(1,2,3,4));
// console.log(Math.min(...arr));



// 取整：
// round(x):返回x四舍五入取整后的结果
// console.log(Math.round(3.59));


// ceil(x):返回x向上取整后的结果
// console.log(Math.ceil(3.01));
// console.log(Math.ceil(-3.12));

// floor(x):返回x向下取整后的结果
// console.log(Math.floor(-2.5));
// console.log(Math.floor(2.5));


// random():生成0-1之间的随机数，包括0但不包括1   [0,1)
// console.log(Math.random());

// 获取0-10之间的随机数
// console.log(Math.random() * 10);

// 获取0-10之间的随机整数，包括0包括10 
// console.log(Math.ceil(Math.random() * 10));


// let sname = ['赵子彭','吴建伟','张少康','银星号'];
// 随机点名
// 索引值范围为0~length-1
// 获取随机索引值
// let index = Math.floor(Math.random() * sname.length);
// console.log(index);
// console.log(sname[index]);


// 实现任意区间内的随机值
// 5-10  [5,11)
// 0-1  ===> [5,11)  0,11
// function randNum(min,max){
//     return Math.floor(Math.random() * (max - min) + min);
// }

// console.log(randNum(5,11));


// [5,10]
// function randNum(min,max){
//     return Math.floor(Math.random() * (max - min + 1) + min);
// }


