// 函数
// 语法：
// function 函数名称(参数){
//     函数体;
// }

// 函数调用：
// 函数名称(参数);


// 函数表达式（匿名函数）：
// let 变量名 = function(参数){
//     函数体;
// }

// 函数调用：
// 变量名(参数);

// str();  //先使用后进行定义声明

// function str(){
//     console.log("目标化信念");
// }

// let str = function(){
//     console.log("目标话信念");
// }


// 箭头函数
// 语法：
// let 变量名 = (参数) => {函数体};

// 无参数函数
// let sayHello = () => {
//     console.log("hello");
// }

// // 调用：
// sayHello();

// // 单参数函数：
// let square = (x) => {
//     console.log(x * x);
// }

// square(5);
// square(6);


// 封装一个函数，输出2019年到2030年之间所有的闰年。
// function year(){
//     for(let i = 2019;i <= 2030;i++){
//         if(i % 4 == 0 && i % 100 != 0 || i % 400 == 0){
//             console.log(i);
//         }
//     }
// }

// year();



// 定义三个数，封装一个函数，输出三个数的最大值。
// let a = 1,b = 2,c = 3;
// function max(){
//     if(a > b && a > c){
//         console.log(a);
//     }else if(b > a && b > c){
//         console.log(b);
//     }else if(c > a && c > b){
//         console.log(c);
//     }
// }
// max();


// 数组的两种定义方法
// 1、数组的字面量方式
// let arr = [1,2,3,4,5,[11,22,33]];
// console.log(arr);

// 有序集合：用索引/下标来表示数组中数据的具体位置
// 索引/下标的表示方式：从0开始依次进行计数

// 获取数组中的具体元素:数组名[索引值]
// 示例：获取arr数组中的3
// console.log(arr[2]);

// // 获取arr数组中的22
// console.log(arr[5][1]);


// // 数组的长度：length
// console.log(arr.length);


// 2、构造函数的形式Array
// let arr = new Array;   //[]空数组
// let arr = new Array();   //[]空数组
// let arr = new Array(5);  //只定义一个数值，该数值代表数组长度
// let arr = new Array(1,2,3,4);
// console.log(arr);


// 查看数据类型
// let arr = [12,3,4];
// console.log(typeof arr);

// instanceof:判断某一数据是否为指定的数据类型
// 使用new+构造函数的形式进行创建的数据为引用数据类型（object）
// let str = new String("hello");
// console.log(typeof str);
// console.log(str instanceof String);



// 数组的添加
// let sname = ['银星号','王浚哲','齐艳雷','霍亚冰'];
// sname[6] = '周江超';
// console.log(sname[6],sname);

// // 数组的修改
// sname[2] = '刘昊伟';
// console.log(sname);


// // 删除数组中的元素
// sname.length--;
// console.log(sname);




// 数组的管理
// push():在数组的末尾添加一个元素,返回数组的长度
// let sname = ['银星号','王浚哲','齐艳雷','霍亚冰'];
// let len = sname.push("李赵磊");
// console.log(sname,len);


// // pop():删除数组的末尾元素,返回被删除的数据
// let str = sname.pop();
// console.log(sname,str);


// // unshift():在数组的开头添加元素,返回数组的长度
// let clen = sname.unshift('孟凡昊');
// console.log(sname,clen);


// // shift():删除数组的头元素,返回被删除的数据
// let user = sname.shift();
// console.log(sname,user);


// splice(index,howmany,element[,element]);
// index:指定元素对应的索引，必选项
// howmany:删除的元素个数，必选项，如果进行添加元素，则设置0
// element:新添加的元素

// 删除：
// let sname = ['银星号','王浚哲','齐艳雷','霍亚冰'];
// sname.splice(1,1);
// console.log(sname);

// // 添加：
// //['银星号', '齐艳雷', '霍亚冰']
// sname.splice(2,0,'赵子彭');
// console.log(sname);

// // 替换：
// // ['银星号', '齐艳雷', '赵子彭', '霍亚冰']
// sname.splice(1,1,'史珊珊');
// console.log(sname);



// join():将数组中的数据使用指定的分隔符分割/重组成字符串,未定义分隔符以,为主
// let sname = ['银星号','王浚哲','齐艳雷','霍亚冰'];
// console.log(sname.join("*"));


// concat():用于合并两个或多个数组
// let sname = ['银星号','王浚哲','齐艳雷','霍亚冰'];
// console.log(sname.concat([1,2,3],[4,5,6]));
// console.log(sname);



// 数组的逆置：reverse(),会修改原数组
// let sname = ['银星号','王浚哲','齐艳雷','霍亚冰'];
// sname.reverse();
// console.log(sname);


// sort():数组排序,会修改原数组，排序顺序为按照字母或数字的开头进行升序排序
// let arr = [1,2,65,89,10,99];
// let sname = ['银星号','王浚哲','齐艳雷','霍亚冰'];
// arr.sort();
// sname.sort();
// console.log(arr,sname);

// 升序：function(a,b){return a - b;}
// 降序：function(a,b){return b - a;}

// arr.sort(function(a,b){
//     return a - b;
// });
// console.log(arr);

// arr.sort(function(a,b){
//     return b - a;
// });
// console.log(arr);

// 高阶函数：

// map():对于原数组中的数据进行指定操作后，返回给一个新的数组
// let arr = [1,2,3,4,5];
// let n_arr = arr.map(function(ele){
//     return ele * 2;
// });
// console.log(n_arr);



// 数据转换：把原数组中的所有元素转换为整数
// let arr = ['123abc','456bcd','789qqq'];
// let n_arr = arr.map(function(ele){
//     return parseInt(ele);
// });

// console.log(n_arr);



// filter:筛选、过滤原数组中符合条件的数据，返回一个新的数组
// let arr = [1,2,3,4,5,6];
// let n_arr = arr.filter(function(ele){
//     return ele % 2 == 0;
// });
// console.log(n_arr);


// 筛选出该数组中为数值型的数据
// let arr = [true,12,34,56,'hello','你好'];
// let n_arr = arr.filter(function(ele){
//     return typeof ele == 'number';
// });
// console.log(n_arr);


// 筛选出该数组中为有效数字的数据
// let arr = [true,12,34,56,'hello','你好',NaN];
// let n_arr = arr.filter(function(ele){
//     return !isNaN(ele) && typeof ele == 'number';
// });

// console.log(n_arr);


// let words = ['apple','banana','water melon','cherry'];
// // 要求筛选出字符串长度大于五的值
// let n_arr = words.filter(function(ele){
//     return ele.length > 5;
// });
// console.log(n_arr);

